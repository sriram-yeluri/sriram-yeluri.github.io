{
    "docs": [
        {
            "location": "/", 
            "text": "Constant learning and knowledge sharing is what motivates me to keep going in IT industry for all these years.\nWith the same motivation, i started with this documentation and i will be adding more and more information when ever i get some free time.", 
            "title": "Home"
        }, 
        {
            "location": "/Ansible/", 
            "text": "Ansible", 
            "title": "Ansible"
        }, 
        {
            "location": "/Ansible/#ansible", 
            "text": "", 
            "title": "Ansible"
        }, 
        {
            "location": "/AWS/aws/", 
            "text": "Amazon Web Services", 
            "title": "Introduction"
        }, 
        {
            "location": "/AWS/aws/#amazon-web-services", 
            "text": "", 
            "title": "Amazon Web Services"
        }, 
        {
            "location": "/AWS/cft/", 
            "text": "CloudFormation Template\n\n\n\n\nA template is a JSON- or YAML-formatted text file that describes your AWS infrastructure. \n\n\nA template is a declaration of the AWS resources that make up a stack. \n\n\n\n\nTemplate Anatomy\n  \n\n\nReferences\n  \n\n\nCloudFormation support for Visual Studio Code", 
            "title": "CFT"
        }, 
        {
            "location": "/AWS/cft/#cloudformation-template", 
            "text": "A template is a JSON- or YAML-formatted text file that describes your AWS infrastructure.   A template is a declaration of the AWS resources that make up a stack.    Template Anatomy     References     CloudFormation support for Visual Studio Code", 
            "title": "CloudFormation Template"
        }, 
        {
            "location": "/AWS/s3/", 
            "text": "Simple Storage Service", 
            "title": "S3"
        }, 
        {
            "location": "/AWS/s3/#simple-storage-service", 
            "text": "", 
            "title": "Simple Storage Service"
        }, 
        {
            "location": "/Bitbucket/bitbucket/", 
            "text": "Atlassian Bitbucket", 
            "title": "Introduction"
        }, 
        {
            "location": "/Bitbucket/bitbucket/#atlassian-bitbucket", 
            "text": "", 
            "title": "Atlassian Bitbucket"
        }, 
        {
            "location": "/Fortify/fortify/", 
            "text": "Fortify", 
            "title": "Fortify"
        }, 
        {
            "location": "/Fortify/fortify/#fortify", 
            "text": "", 
            "title": "Fortify"
        }, 
        {
            "location": "/Docker/Docker/", 
            "text": "DOCKER\n\n\n\n\nDocker EE on RHEL 7.4\n\n\n  \n\n\nInstall Docker CE on Centos7\n\n\nInstall Docker CE on Centos7\n\n\nhttps://store.docker.com/  \n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\ndockerCE\n\n# yum install -y yum-utils \\\n\n  device-mapper-persistent-data \n\\\n\n  lvm2\n\n\n# yum-config-manager \\\n\n    --add-repo \n\\\n\n    https://download.docker.com/linux/centos/docker-ce.repo\n\n\n# yum install docker-ce\n\ndockerCE\n\n\n# usermod -aG docker \nuser_id\n This is to run docker as non root user\n\n\n\n[\nroot@centos7vm ~\n]\n# systemctl enable docker\n\nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n\n\n[\nroot@centos7vm ~\n]\n# chkconfig docker on\n\nNote: Forwarding request to \nsystemctl enable docker.service\n.\n\n\n# service docker start\n\n\n\n# docker ps\n\n\n\n\n\n\n\nNexus\n\n\nSonatype Nexus Docker with persisent data\n\n\n1\n2\n# chown -R 200 /home/sriram.yeluri/Data/NEXUS_DATA  \n\n\n# docker run -d -p 8081:8081 --name nexus -v /home/sriram.yeluri/Data/NEXUS_DATA:/nexus-data sonatype/nexus3\n\n\n\n\n\n\n\n\n\nexample\n\n\nhttp://192.168.2.5:8081/\n\n\n\n\nJenkins : https://store.docker.com/images/jenkins\n\n\nJenkins\n\n\nJenkins with persisent data\n\n\n1\n2\n3\n# docker run -p 8080:8080 -p 50000:50000 --name jenkins -v /home/sriram.yeluri/Data/JENKINS_HOME:/var/jenkins_home jenkins\n\n\n\n# docker run -p 8080:8080 -p 50000:50000 --name jenkins -v /home/sriram.yeluri/Data/JENKINS_HOME:/var/jenkins_home jenkins/jenkins:lts\n\n\n\n\n\n\n\nJenkins Operations Center - JOC\n\n\n1\n# docker run -p 8089:8080 -p 50001:50000 --name cjoc -v /home/sriram.yeluri/Data/JENKINS_OC_HOME:/var/jenkins_home cloudbees/jenkins-operations-center\n\n\n\n\n\n\n\nInitial seret can be found at : /var/jenkins_home/secrets/initialAdminPassword  \n\n\n\n\nexample\n\n\nhttp://192.168.2.5:8080/  \n\n\n\n\nPostgres\n\n\n1\n# docker run --name postgres -e POSTGRES_PASSWORD=secret -d postgres -v /home/sriram.yeluri/Data/PG_DATA:/var/lib/postgresql/data", 
            "title": "Docker"
        }, 
        {
            "location": "/Docker/Docker/#docker", 
            "text": "", 
            "title": "DOCKER"
        }, 
        {
            "location": "/Docker/Docker/#docker-ee-on-rhel-74", 
            "text": "", 
            "title": "Docker EE on RHEL 7.4"
        }, 
        {
            "location": "/Docker/Docker/#install-docker-ce-on-centos7", 
            "text": "Install Docker CE on Centos7  https://store.docker.com/     1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23 dockerCE # yum install -y yum-utils \\ \n  device-mapper-persistent-data  \\ \n  lvm2 # yum-config-manager \\ \n    --add-repo  \\ \n    https://download.docker.com/linux/centos/docker-ce.repo # yum install docker-ce \ndockerCE # usermod -aG docker  user_id  This is to run docker as non root user  [ root@centos7vm ~ ] # systemctl enable docker \nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service. [ root@centos7vm ~ ] # chkconfig docker on \nNote: Forwarding request to  systemctl enable docker.service . # service docker start  # docker ps", 
            "title": "Install Docker CE on Centos7"
        }, 
        {
            "location": "/Docker/Docker/#nexus", 
            "text": "", 
            "title": "Nexus"
        }, 
        {
            "location": "/Docker/Docker/#sonatype-nexus-docker-with-persisent-data", 
            "text": "1\n2 # chown -R 200 /home/sriram.yeluri/Data/NEXUS_DATA    # docker run -d -p 8081:8081 --name nexus -v /home/sriram.yeluri/Data/NEXUS_DATA:/nexus-data sonatype/nexus3     example  http://192.168.2.5:8081/   Jenkins : https://store.docker.com/images/jenkins", 
            "title": "Sonatype Nexus Docker with persisent data"
        }, 
        {
            "location": "/Docker/Docker/#jenkins", 
            "text": "", 
            "title": "Jenkins"
        }, 
        {
            "location": "/Docker/Docker/#jenkins-with-persisent-data", 
            "text": "1\n2\n3 # docker run -p 8080:8080 -p 50000:50000 --name jenkins -v /home/sriram.yeluri/Data/JENKINS_HOME:/var/jenkins_home jenkins  # docker run -p 8080:8080 -p 50000:50000 --name jenkins -v /home/sriram.yeluri/Data/JENKINS_HOME:/var/jenkins_home jenkins/jenkins:lts", 
            "title": "Jenkins with persisent data"
        }, 
        {
            "location": "/Docker/Docker/#jenkins-operations-center-joc", 
            "text": "1 # docker run -p 8089:8080 -p 50001:50000 --name cjoc -v /home/sriram.yeluri/Data/JENKINS_OC_HOME:/var/jenkins_home cloudbees/jenkins-operations-center    Initial seret can be found at : /var/jenkins_home/secrets/initialAdminPassword     example  http://192.168.2.5:8080/", 
            "title": "Jenkins Operations Center - JOC"
        }, 
        {
            "location": "/Docker/Docker/#postgres", 
            "text": "1 # docker run --name postgres -e POSTGRES_PASSWORD=secret -d postgres -v /home/sriram.yeluri/Data/PG_DATA:/var/lib/postgresql/data", 
            "title": "Postgres"
        }, 
        {
            "location": "/Docker/dockerfile/", 
            "text": "page under construction  .....\n\n\n\n\nDockerfile is a simple text file to create a docker image.  \n\n\nDefault file name is \"Dockerfile\"  \n\n\n\n\nBasic Dockerfile syntax\n\n\n1\n2\n3\n4\n5\nENV\nFROM\nMAINTAINER\nRUN\nCMD\n\n\n\n\n\n\nReferences\n\n\nDetailed Explanation of Dockerfile\n\n\nVideo References:\n\n\nhttps://www.youtube.com/watch?v=LQjaJINkQXY", 
            "title": "Dockerfile"
        }, 
        {
            "location": "/Docker/dockerfile/#page-under-construction", 
            "text": "Dockerfile is a simple text file to create a docker image.    Default file name is \"Dockerfile\"", 
            "title": "page under construction  ....."
        }, 
        {
            "location": "/Docker/dockerfile/#basic-dockerfile-syntax", 
            "text": "1\n2\n3\n4\n5 ENV\nFROM\nMAINTAINER\nRUN\nCMD", 
            "title": "Basic Dockerfile syntax"
        }, 
        {
            "location": "/Docker/dockerfile/#references", 
            "text": "Detailed Explanation of Dockerfile", 
            "title": "References"
        }, 
        {
            "location": "/Docker/dockerfile/#video-references", 
            "text": "https://www.youtube.com/watch?v=LQjaJINkQXY", 
            "title": "Video References:"
        }, 
        {
            "location": "/git/", 
            "text": "Distributed Version Control System : GIT\n\n\nGit config\n\n\n1\n2\n3\n$ git config --global user.email \nyeluris@gmail.com\n \n$ git config --global user.name \nSriram Yeluri\n  \n$ git config --list  \n\n\n\n\n\n\nBasic Git commands\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n$ git init \n(\ninitialize a \nlocal\n repository\n)\n  \n$ git add --all \n(\nor\n)\n  \n$ git add \n[\nfilename\n]\n \n(\nor\n)\n \n$ git add . \n[\nall changed files \nfor\n commit\n]\n  \n$ git status \n(\nshow the status of working tree\n)\n  \n$ git commit -m \ncommit message\n  \n$ git push  \n(\npush to remote repository\n)\n  \n$ git pull \n(\nfetch changes from remote repository\n)\n  \n$ git clone \n[\ngit repo url\n]\n  \n$ git fetch \n(\nfetch branches, tags from remote repository\n)\n\n\n\n\n\n\n\nRemove files from staging area\n\n\n1\n2\n$ git reset file_name  \n(\nor\n)\n  \n$ git reset  \n(\nto remove all files from staging area\n)\n  \n\n\n\n\n\n\n\n\nGit Tagging\n\n\nGit tagging is used to mark a important history like a release v1.0 \n\n\nBy default git push will not commit the tags to remote server, instead we have to explicitly mention the remote   \n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n$ git add -a v1.0 -m \nReason for tagging\n\n$ git push origin v1.0\n\nIf there are multiple tags, \nthen\n use --tags flag  \n$ git push origin --tags \n(\nto push all tags\n)\n  \n\nTo list out all the available tags\n$ git tag \n$ git tag -l \n(\nor\n)\n --list  \n(\noptional\n)\n\n\n\n\n\n\n\nInformation about Remote Repository\n\n\n1\n2\n$ git remote -v  \n$ git branch -a  \n(\ndisplays all branches that are present remotely and locally\n)\n\n\n\n\n\n\n\nGit branching\n\n\n1\n2\n$ git branch branch_name  \n$ git checkout branch_name  \n\n\n\n\n\n\nReferences\n\n\ngit-scm\n\n\npro git book\n  \n\n\nVideo References\n\n\nGit Tutorial for Beginners: Command-Line Fundamentals", 
            "title": "Git"
        }, 
        {
            "location": "/git/#distributed-version-control-system-git", 
            "text": "", 
            "title": "Distributed Version Control System : GIT"
        }, 
        {
            "location": "/git/#git-config", 
            "text": "1\n2\n3 $ git config --global user.email  yeluris@gmail.com  \n$ git config --global user.name  Sriram Yeluri   \n$ git config --list", 
            "title": "Git config"
        }, 
        {
            "location": "/git/#basic-git-commands", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10 $ git init  ( initialize a  local  repository )   \n$ git add --all  ( or )   \n$ git add  [ filename ]   ( or )  \n$ git add .  [ all changed files  for  commit ]   \n$ git status  ( show the status of working tree )   \n$ git commit -m  commit message   \n$ git push   ( push to remote repository )   \n$ git pull  ( fetch changes from remote repository )   \n$ git clone  [ git repo url ]   \n$ git fetch  ( fetch branches, tags from remote repository )", 
            "title": "Basic Git commands"
        }, 
        {
            "location": "/git/#remove-files-from-staging-area", 
            "text": "1\n2 $ git reset file_name   ( or )   \n$ git reset   ( to remove all files from staging area )       Git Tagging  Git tagging is used to mark a important history like a release v1.0   By default git push will not commit the tags to remote server, instead we have to explicitly mention the remote      1\n2\n3\n4\n5\n6\n7\n8\n9 $ git add -a v1.0 -m  Reason for tagging \n$ git push origin v1.0\n\nIf there are multiple tags,  then  use --tags flag  \n$ git push origin --tags  ( to push all tags )   \n\nTo list out all the available tags\n$ git tag \n$ git tag -l  ( or )  --list   ( optional )", 
            "title": "Remove files from staging area"
        }, 
        {
            "location": "/git/#information-about-remote-repository", 
            "text": "1\n2 $ git remote -v  \n$ git branch -a   ( displays all branches that are present remotely and locally )", 
            "title": "Information about Remote Repository"
        }, 
        {
            "location": "/git/#git-branching", 
            "text": "1\n2 $ git branch branch_name  \n$ git checkout branch_name", 
            "title": "Git branching"
        }, 
        {
            "location": "/git/#references", 
            "text": "git-scm  pro git book", 
            "title": "References"
        }, 
        {
            "location": "/git/#video-references", 
            "text": "Git Tutorial for Beginners: Command-Line Fundamentals", 
            "title": "Video References"
        }, 
        {
            "location": "/golang/golang/", 
            "text": "Go is an opensource programming launguage developed by Google.\n\n\nGo is very similar to C programming lauguage.\n\n\nGo provides garbage collection, type safety, dynamic-typing capability.\n\n\nGo provides a rich standard library, called as packages - \ngoPackages\n\n\n\n\nGetting Started\n\n\n\n\nHow to install and set up Go\n\n\nHow to set custom goPATH\n\n\nHow to write Go Code\n\n\n\n\n\n\nGOPATH\n\n\nGOPATH must not be the same path as your Go installation\n\ngopath can be any directory on your system\n\nEdit your \n~/.bash_profile\n and add the line: \nexport GOPATH=$HOME/go\n\nsource your \n~/.bash_profile\n : \nsource ~/.bash_profile\n\n\n\n\n\n\nGOBIN\n\n\nSet the GOBIN path to generate a binary file when go install is run.\n\nexport GOBIN=$HOME/go/bin\n\n\n\n\nWorkspaces\n\n\nWorkspace in go is a directory hierarchy with 3 directories at its root\n\n\n\n\nsrc : The src directory contains source code.The path below src determines the import path or executable name.    \n\n\npkg : contains go installed package objects. Each target operating system and architecture pair has its own subdirectory of pkg\n\n        format: pkg/GOOS_GOARCH\n\n        example: pkg/linux_amd64 \n\n\nbin : contains executable binaries.    \n\n\n\n\nReference Links\n\n\ngolang Tutorial\n\n\ngolang wiki page\n\n\ngolang IDEs\n\n\ngoplugin for Sublime Text\n\n\nHow to get go Help\n\n\nFor any help related to go , use \n\n\ngo help \ncommand\n\nexamples:\n\n\ngo help build\n \n\n\ngo help install\n  \n\n\ngo help clean\n\n\ngo help gopath\n  \n\n\nGo Projects", 
            "title": "golang"
        }, 
        {
            "location": "/golang/golang/#getting-started", 
            "text": "How to install and set up Go  How to set custom goPATH  How to write Go Code    GOPATH  GOPATH must not be the same path as your Go installation \ngopath can be any directory on your system \nEdit your  ~/.bash_profile  and add the line:  export GOPATH=$HOME/go \nsource your  ~/.bash_profile  :  source ~/.bash_profile    GOBIN  Set the GOBIN path to generate a binary file when go install is run. export GOBIN=$HOME/go/bin", 
            "title": "Getting Started"
        }, 
        {
            "location": "/golang/golang/#workspaces", 
            "text": "Workspace in go is a directory hierarchy with 3 directories at its root   src : The src directory contains source code.The path below src determines the import path or executable name.      pkg : contains go installed package objects. Each target operating system and architecture pair has its own subdirectory of pkg \n        format: pkg/GOOS_GOARCH \n        example: pkg/linux_amd64   bin : contains executable binaries.", 
            "title": "Workspaces"
        }, 
        {
            "location": "/golang/golang/#reference-links", 
            "text": "golang Tutorial  golang wiki page", 
            "title": "Reference Links"
        }, 
        {
            "location": "/golang/golang/#golang-ides", 
            "text": "goplugin for Sublime Text", 
            "title": "golang IDEs"
        }, 
        {
            "location": "/golang/golang/#how-to-get-go-help", 
            "text": "For any help related to go , use   go help  command \nexamples:  go help build    go help install     go help clean  go help gopath", 
            "title": "How to get go Help"
        }, 
        {
            "location": "/golang/golang/#go-projects", 
            "text": "", 
            "title": "Go Projects"
        }, 
        {
            "location": "/golang/golang-projects/", 
            "text": "golang projects\n\n\nsonar-cli\n\n\ngit-hub repo : \nsonar-cli\n\n\nsonar-cli project is a cli application for sonarqube interface. This cli uses REST API calls of sonarqube.\nDetais about this cli and its usage are explained in the git-hub repo. \n\n\njenkins-cli\n\n\ngit-hub repo : \njenkins-cli\n\n\njenkins-cli project is a cli application for jenkins interface. This cli uses REST API calls of Jenkins.\nDetais about this cli and its usage are explained in the git-hub repo.", 
            "title": "golang-projects"
        }, 
        {
            "location": "/golang/golang-projects/#golang-projects", 
            "text": "", 
            "title": "golang projects"
        }, 
        {
            "location": "/golang/golang-projects/#sonar-cli", 
            "text": "", 
            "title": "sonar-cli"
        }, 
        {
            "location": "/golang/golang-projects/#git-hub-repo-sonar-cli", 
            "text": "sonar-cli project is a cli application for sonarqube interface. This cli uses REST API calls of sonarqube.\nDetais about this cli and its usage are explained in the git-hub repo.", 
            "title": "git-hub repo : sonar-cli"
        }, 
        {
            "location": "/golang/golang-projects/#jenkins-cli", 
            "text": "", 
            "title": "jenkins-cli"
        }, 
        {
            "location": "/golang/golang-projects/#git-hub-repo-jenkins-cli", 
            "text": "jenkins-cli project is a cli application for jenkins interface. This cli uses REST API calls of Jenkins.\nDetais about this cli and its usage are explained in the git-hub repo.", 
            "title": "git-hub repo : jenkins-cli"
        }, 
        {
            "location": "/Jenkins/Jenkins-code-snippets/", 
            "text": "How to test NodeJS\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\nnode(\nlinux\n) {\nstage(\nLinux :: NodeJS :: Default\n ) { \n    sh \nnode --version\n \n}\nstage(\nLinux :: NodeJS :: v8.9.0\n ) {\n    def nodejs = tool name: \nLinux NodeJS v8.9.0\n, type: \njenkins.plugins.nodejs.tools.NodeJSInstallation\n\n    sh \n$ {nodejs}/bin/node --version\n\n}\nstage(\nLinux :: NodeJS :: v8.9.0:: withEnv\n ) {\n    withEnv([\nPATH+NODE=\n${\ntool\n \nLinux NodeJS v8.9.0\n}\n/bin\n]){ \n        sh \nnode --version\n \n        }\n    }\n}\n\n\n\n\n\n\nParallel Pipelines\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\ndef labels = [\n    \nnode1\n, \n    \nnode2\n \n    ]\ndef builders = [:]\nfor (x in labels) {\n    def label = x \n    // Create a map to pass in to the \nparallel\n step so we can fire all the builds at once\n    builders[label] = {\n      node(label) {\n        // build steps that should happen on all nodes go here\n\n        }\n    }\n}\nparallel builders\n\n\n\n\n\n\nAndroid sdk tools update\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\nnode(\nandroid\n){\n    stage(\ncheckoutSCM\n){\n        git credentialsId: \nCREDENTIAL_ID\n, url: \nrepo-url\n\n    }\n    stage(\nValidation\n){\n        echo \nvalidated\n\n    }\n    stage(\nBuildTool Install\n){\n        dir(\nslave-android/provisioning/install\n){\n            sh \nls -ltr\n\n            sh \nchmod +x install-android-sdk-buildtools.sh\n\n            sh \n./install-android-sdk-buildtools.sh 26 0.1\n\n        }\n    }\n    stage(\ncleanUp\n){\n       deleteDir() \n    }\n}\n\n\n\n\n\n\nHow to update android sdk from Jenkins pipeline\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\ndef ANDROID_HOME=\n/Users/jenkinsci/Library/Android/sdk\n  [New situation will be ANDROID_HOME=\n$HOME\n/SOLO/Android/sdk\n ]\nnode(\nandroid\n){\n    stage(\nList AndriodSdk\n){\n        sh \necho \n${\nANDROID_HOME\n}\n\n        sh \ncd /Users/jenkinsci/Library/Android/sdk/tools/bin/ \n\n            ./sdkmanager --list --proxy=http --proxy_host=xxxxxxxx.com --proxy_port=8080\n\n    }\n    stage(\nUpdate AndriodSdk\n){\n        sh \necho \n${\nANDROID_HOME\n}\n\n        sh \ncd /Users/jenkinsci/Library/Android/sdk/tools/bin/ \n\n            ./sdkmanager --update --proxy=http --proxy_host=xxxxxxxxx.com --proxy_port=8080\n\n    }\n    stage(\nCheck AndroidVersion\n){\n        sh \ncd /Users/jenkinsci/Library/Android/sdk/tools/bin/ \n\n            ./sdkmanager --version\n\n    }\n}", 
            "title": "Jenkins-code-snippets"
        }, 
        {
            "location": "/Jenkins/Jenkins-code-snippets/#how-to-test-nodejs", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14 node( linux ) {\nstage( Linux :: NodeJS :: Default  ) { \n    sh  node --version  \n}\nstage( Linux :: NodeJS :: v8.9.0  ) {\n    def nodejs = tool name:  Linux NodeJS v8.9.0 , type:  jenkins.plugins.nodejs.tools.NodeJSInstallation \n    sh  $ {nodejs}/bin/node --version \n}\nstage( Linux :: NodeJS :: v8.9.0:: withEnv  ) {\n    withEnv([ PATH+NODE= ${ tool   Linux NodeJS v8.9.0 } /bin ]){ \n        sh  node --version  \n        }\n    }\n}", 
            "title": "How to test NodeJS"
        }, 
        {
            "location": "/Jenkins/Jenkins-code-snippets/#parallel-pipelines", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16 def labels = [\n     node1 , \n     node2  \n    ]\ndef builders = [:]\nfor (x in labels) {\n    def label = x \n    // Create a map to pass in to the  parallel  step so we can fire all the builds at once\n    builders[label] = {\n      node(label) {\n        // build steps that should happen on all nodes go here\n\n        }\n    }\n}\nparallel builders", 
            "title": "Parallel Pipelines"
        }, 
        {
            "location": "/Jenkins/Jenkins-code-snippets/#android-sdk-tools-update", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18 node( android ){\n    stage( checkoutSCM ){\n        git credentialsId:  CREDENTIAL_ID , url:  repo-url \n    }\n    stage( Validation ){\n        echo  validated \n    }\n    stage( BuildTool Install ){\n        dir( slave-android/provisioning/install ){\n            sh  ls -ltr \n            sh  chmod +x install-android-sdk-buildtools.sh \n            sh  ./install-android-sdk-buildtools.sh 26 0.1 \n        }\n    }\n    stage( cleanUp ){\n       deleteDir() \n    }\n}", 
            "title": "Android sdk tools update"
        }, 
        {
            "location": "/Jenkins/Jenkins-code-snippets/#how-to-update-android-sdk-from-jenkins-pipeline", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17 def ANDROID_HOME= /Users/jenkinsci/Library/Android/sdk   [New situation will be ANDROID_HOME= $HOME /SOLO/Android/sdk  ]\nnode( android ){\n    stage( List AndriodSdk ){\n        sh  echo  ${ ANDROID_HOME } \n        sh  cd /Users/jenkinsci/Library/Android/sdk/tools/bin/  \n            ./sdkmanager --list --proxy=http --proxy_host=xxxxxxxx.com --proxy_port=8080 \n    }\n    stage( Update AndriodSdk ){\n        sh  echo  ${ ANDROID_HOME } \n        sh  cd /Users/jenkinsci/Library/Android/sdk/tools/bin/  \n            ./sdkmanager --update --proxy=http --proxy_host=xxxxxxxxx.com --proxy_port=8080 \n    }\n    stage( Check AndroidVersion ){\n        sh  cd /Users/jenkinsci/Library/Android/sdk/tools/bin/  \n            ./sdkmanager --version \n    }\n}", 
            "title": "How to update android sdk from Jenkins pipeline"
        }, 
        {
            "location": "/Linux/linux_learning/", 
            "text": "List of Topics\n\n\n\n\nLinux File System\n\n\nFiles and Permissions\n\n\nLinux Basic Commands\n\n\nSudo access and root\n\n\nUser and Group Management\n\n\nService Management\n\n\nCurl and Wget\n\n\nSSH : secure access\n\n\nSSH : Transferring with scp and sftp\n\n\nBash Scripting", 
            "title": "Overview"
        }, 
        {
            "location": "/Linux/linux_learning/#list-of-topics", 
            "text": "Linux File System  Files and Permissions  Linux Basic Commands  Sudo access and root  User and Group Management  Service Management  Curl and Wget  SSH : secure access  SSH : Transferring with scp and sftp  Bash Scripting", 
            "title": "List of Topics"
        }, 
        {
            "location": "/Linux/vim/", 
            "text": "VIM reference\n\n\nSearch and replace\n\n%s/text/replacement/g  \n\n\nSearch and replace with confirmation\n\n%s/text/replacement/gc  \n\n\nForward Search : /\n\nBackward Search : ?\n\nSearch Next : n\n\nSearch back : N\n\nMove to begining of line : 0\n\nMove to end of line : $\n\nGo to end of file : G\n\nGo to beginning of file : gg", 
            "title": "Vim"
        }, 
        {
            "location": "/Linux/vim/#vim-reference", 
            "text": "Search and replace \n%s/text/replacement/g    Search and replace with confirmation \n%s/text/replacement/gc    Forward Search : / \nBackward Search : ? \nSearch Next : n \nSearch back : N \nMove to begining of line : 0 \nMove to end of line : $ \nGo to end of file : G \nGo to beginning of file : gg", 
            "title": "VIM reference"
        }, 
        {
            "location": "/Linux/CentOS/", 
            "text": "CENTOS :\n\n\n\n\nYour system does not seem to be set up to build kernel modules.\n\n\n1\n2\n3\n4\n# yum clean all\n\n\n# yum install gcc-c++\n\n\n# yum install kernel-devel\n\n\n# yum install kernel-headers\n\n\n\n\n\n\n\nHow to setup network after RHEL/CentOS 7 minimal installation\n\n\nHow To\n\n\nAfter installing RHEL/CentOS 7 minimal, You may not able to connect network in that machine. This will happen because Ethernet interfaces are not enabled by default.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n# nmcli d (List the available interfaces)\n\n\n# nmtui \n\n\n1\n. open Network manager, and choose Edit connection\n\n2\n. choose you network interfaces and click \u201cEdit\u201d\n\n3\n. Choose \u201cAutomatic\u201d in IPv4 CONFIGURATION and check Automatically connect check box and press OK and quit from Network manager.\n\n4\n. Restart network service\n\n\n# service network restart", 
            "title": "Centos"
        }, 
        {
            "location": "/Linux/CentOS/#centos", 
            "text": "", 
            "title": "CENTOS :"
        }, 
        {
            "location": "/Linux/CentOS/#your-system-does-not-seem-to-be-set-up-to-build-kernel-modules", 
            "text": "1\n2\n3\n4 # yum clean all  # yum install gcc-c++  # yum install kernel-devel  # yum install kernel-headers", 
            "title": "Your system does not seem to be set up to build kernel modules."
        }, 
        {
            "location": "/Linux/CentOS/#how-to-setup-network-after-rhelcentos-7-minimal-installation", 
            "text": "How To  After installing RHEL/CentOS 7 minimal, You may not able to connect network in that machine. This will happen because Ethernet interfaces are not enabled by default.  1\n2\n3\n4\n5\n6\n7\n8 # nmcli d (List the available interfaces)  # nmtui   1 . open Network manager, and choose Edit connection 2 . choose you network interfaces and click \u201cEdit\u201d 3 . Choose \u201cAutomatic\u201d in IPv4 CONFIGURATION and check Automatically connect check box and press OK and quit from Network manager. 4 . Restart network service # service network restart", 
            "title": "How to setup network after RHEL/CentOS 7 minimal installation"
        }, 
        {
            "location": "/Linux/RHEL/", 
            "text": "RHEL\n\n\n\n\n  \n\n\nHow to subscribe to Redhat using subscription-manager\n\n\nsubscription-manager\n\n\n  \n\n\nsubscription-manager list\n\n\n  \n\n\nsubscription-manager register\n\n\n  \n\n\nsubscription-manager attach\n\n\n  \n\n\nsubscription-manager identity\n\n\n  \n\n\nAdd GUI fromm basic installation\n\n\n1\n2\n3\n4\n5\n~\n]\n# yum groupinstall gnome-desktop x11 fonts  \n\n~\n]\n# yum groupinstall \nServer with GUI\n  \n\n~\n]\n# systemctl set-default graphical.target  \n\n~\n]\n# systemctl start graphical.target  \n\n\n[\nAdd GUI \n](\nhttps://access.redhat.com/solutions/5238?tour\n=\n6\n)", 
            "title": "RedHat"
        }, 
        {
            "location": "/Linux/RHEL/#rhel", 
            "text": "", 
            "title": "RHEL"
        }, 
        {
            "location": "/Linux/RHEL/#how-to-subscribe-to-redhat-using-subscription-manager", 
            "text": "", 
            "title": "How to subscribe to Redhat using subscription-manager"
        }, 
        {
            "location": "/Linux/RHEL/#subscription-manager", 
            "text": "", 
            "title": "subscription-manager"
        }, 
        {
            "location": "/Linux/RHEL/#subscription-manager-list", 
            "text": "", 
            "title": "subscription-manager list"
        }, 
        {
            "location": "/Linux/RHEL/#subscription-manager-register", 
            "text": "", 
            "title": "subscription-manager register"
        }, 
        {
            "location": "/Linux/RHEL/#subscription-manager-attach", 
            "text": "", 
            "title": "subscription-manager attach"
        }, 
        {
            "location": "/Linux/RHEL/#subscription-manager-identity", 
            "text": "", 
            "title": "subscription-manager identity"
        }, 
        {
            "location": "/Linux/RHEL/#add-gui-fromm-basic-installation", 
            "text": "1\n2\n3\n4\n5 ~ ] # yum groupinstall gnome-desktop x11 fonts   \n~ ] # yum groupinstall  Server with GUI    \n~ ] # systemctl set-default graphical.target   \n~ ] # systemctl start graphical.target    [ Add GUI  ]( https://access.redhat.com/solutions/5238?tour = 6 )", 
            "title": "Add GUI fromm basic installation"
        }, 
        {
            "location": "/Linux/ubuntu/", 
            "text": "Ubuntu\n\n\n\n\nHow to take screenshot ?\n\n\nHold shift + prtScr , mouse turns to a cross. Select the area to screenshot.\nImage will be saved to pictures folder by default.To copy to Clipboard, use: Ctrl + Shift + PrtScn.", 
            "title": "Ubuntu"
        }, 
        {
            "location": "/Linux/ubuntu/#ubuntu", 
            "text": "", 
            "title": "Ubuntu"
        }, 
        {
            "location": "/Linux/ubuntu/#how-to-take-screenshot", 
            "text": "Hold shift + prtScr , mouse turns to a cross. Select the area to screenshot.\nImage will be saved to pictures folder by default.To copy to Clipboard, use: Ctrl + Shift + PrtScn.", 
            "title": "How to take screenshot ?"
        }, 
        {
            "location": "/Linux/kde_configuration/", 
            "text": "KDE\n\n\n\n\nKDE Configuration Readme\n\n\nHow to manage KDE applications launcher", 
            "title": "KDE"
        }, 
        {
            "location": "/Linux/kde_configuration/#kde", 
            "text": "", 
            "title": "KDE"
        }, 
        {
            "location": "/Linux/kde_configuration/#kde-configuration-readme", 
            "text": "", 
            "title": "KDE Configuration Readme"
        }, 
        {
            "location": "/Linux/kde_configuration/#how-to-manage-kde-applications-launcher", 
            "text": "", 
            "title": "How to manage KDE applications launcher"
        }, 
        {
            "location": "/Linux/Networking/", 
            "text": "To display all network interfaces\n\n\nifconfig -a\n\n\nTo start an interface\n\n\nifup eth0\n\n\nTo display all pci devices\n\n\nlspci\n\n\nnmcli : command line tool for network management\n\n\nList out all network interfaces and status\n\n\n1\n# nmcli -p \n\n\n\n\n\n\n\nHow to configure Static IP address\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n# vi /etc/sysconfig/network-scripts/ifcfg-eth0\n\n\n\n## Typical Configuration \n\n\nDEVICE\n=\neth0\n\n\nONBOOT\n=\nyes\n\nNETBOOT\n=\nyes\n\nUUID\n=\n41171a6f-bce1-44de-8a6e-cf5e782f8bd6\n\n\nIPV6INIT\n=\nyes\n\nBOOTPROTO\n=\ndhcp\n\nHWADDR\n=\n00:08:a2:0a:ba:b8\n\n\nTYPE\n=\nEthernet\n\nNAME\n=\neth0\n\n\n\n\n### Updated Configuration\n\n\nHWADDR\n=\n00\n:08:A2:0A:BA:B8\n\nTYPE\n=\nEthernet\n\nBOOTPROTO\n=\nnone\n\n# Server IP #\n\n\nIPADDR\n=\n192\n.168.2.203\n\n# Subnet #\n\n\nPREFIX\n=\n24\n\n\n# Set default gateway IP #\n\n\nGATEWAY\n=\n192\n.168.2.254\n\n# Set dns servers #\n\n\nDNS1\n=\n192\n.168.2.254\n\nDNS2\n=\n8\n.8.8.8\n\nDNS3\n=\n8\n.8.4.4\n\nDEFROUTE\n=\nyes\n\nIPV4_FAILURE_FATAL\n=\nno\n\n# Disable ipv6 #\n\n\nIPV6INIT\n=\nno\n\nNAME\n=\neth0\n\n# This is system specific and can be created using \nuuidgen eth0\n command #\n\n\nUUID\n=\n41171a6f-bce1-44de-8a6e-cf5e782f8bd6\n\nDEVICE\n=\neth0\n\nONBOOT\n=\nyes\n\n\n# systemctl restart network\n\n\nVerify new IP settings: ip a s eth0\n\nVerify new routing settings: ip r\nVerify DNS servers settings: \n# cat /etc/resolv.conf", 
            "title": "Networking"
        }, 
        {
            "location": "/Linux/Networking/#to-display-all-network-interfaces", 
            "text": "ifconfig -a", 
            "title": "To display all network interfaces"
        }, 
        {
            "location": "/Linux/Networking/#to-start-an-interface", 
            "text": "ifup eth0", 
            "title": "To start an interface"
        }, 
        {
            "location": "/Linux/Networking/#to-display-all-pci-devices", 
            "text": "lspci", 
            "title": "To display all pci devices"
        }, 
        {
            "location": "/Linux/Networking/#nmcli-command-line-tool-for-network-management", 
            "text": "List out all network interfaces and status  1 # nmcli -p", 
            "title": "nmcli : command line tool for network management"
        }, 
        {
            "location": "/Linux/Networking/#how-to-configure-static-ip-address", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44 # vi /etc/sysconfig/network-scripts/ifcfg-eth0  ## Typical Configuration   DEVICE = eth0  ONBOOT = yes NETBOOT = yes UUID = 41171a6f-bce1-44de-8a6e-cf5e782f8bd6  IPV6INIT = yes BOOTPROTO = dhcp HWADDR = 00:08:a2:0a:ba:b8  TYPE = Ethernet NAME = eth0  ### Updated Configuration  HWADDR = 00 :08:A2:0A:BA:B8 TYPE = Ethernet BOOTPROTO = none # Server IP #  IPADDR = 192 .168.2.203 # Subnet #  PREFIX = 24  # Set default gateway IP #  GATEWAY = 192 .168.2.254 # Set dns servers #  DNS1 = 192 .168.2.254 DNS2 = 8 .8.8.8 DNS3 = 8 .8.4.4 DEFROUTE = yes IPV4_FAILURE_FATAL = no # Disable ipv6 #  IPV6INIT = no NAME = eth0 # This is system specific and can be created using  uuidgen eth0  command #  UUID = 41171a6f-bce1-44de-8a6e-cf5e782f8bd6 DEVICE = eth0 ONBOOT = yes # systemctl restart network \n\nVerify new IP settings: ip a s eth0\n\nVerify new routing settings: ip r\nVerify DNS servers settings:  # cat /etc/resolv.conf", 
            "title": "How to configure Static IP address"
        }, 
        {
            "location": "/Linux/Scripting/bash/", 
            "text": "Shell scripting in bash\n\n\nbash wikibook", 
            "title": "bash"
        }, 
        {
            "location": "/Linux/Scripting/bash/#shell-scripting-in-bash", 
            "text": "bash wikibook", 
            "title": "Shell scripting in bash"
        }, 
        {
            "location": "/Linux/yum/", 
            "text": "YUM broken\n\n\n1\n2\n3\n4\n5\n6\n###\n \nYUM\n \nnot\n \nworking\n \non\n \nCentos\n \nand\n \ngave\n \nbelow\n \nerror\n \n:\n\n\ncould\n \nnot\n \nretrieve\n \nmirrorlist\n \nhttp\n://\nmirrorlist\n.\ncentos\n.\norg\n/?\nrelease\n=\n7\narch\n=\nx86_64\nrepo\n=\nextras\ninfra\n=\nstock\n \nerror\n \nwas\n\n\n14\n:\n \ncurl\n#\n6\n \n-\n \nCould not resolve host: mirrorlist.centos.org; Unknown error\n\n\n\n###\n \nTo\n \nFix\n \nabove\n \nissue\n \n:\n \ngo\n \nto\n \n/\netc\n/\nresolve\n.\nconf\n \nand\n \nadd\n/\nupdate\n \nnameserver\n\n\nnameserver\n \n8\n.\n8\n.\n8\n.\n8\n\n\n\n\n\n\n\nHow to rebuild the yum database\n\n\n1\n2\n3\n4\n# yum clean all\n\n\n# rm -f /var/lib/rpm/__db*\n\n\n# rpm --rebuilddb\n\n\n# yum update", 
            "title": "yum"
        }, 
        {
            "location": "/Linux/yum/#yum-broken", 
            "text": "1\n2\n3\n4\n5\n6 ###   YUM   not   working   on   Centos   and   gave   below   error   :  could   not   retrieve   mirrorlist   http :// mirrorlist . centos . org /? release = 7 arch = x86_64 repo = extras infra = stock   error   was  14 :   curl # 6   -   Could not resolve host: mirrorlist.centos.org; Unknown error  ###   To   Fix   above   issue   :   go   to   / etc / resolve . conf   and   add / update   nameserver  nameserver   8 . 8 . 8 . 8", 
            "title": "YUM broken"
        }, 
        {
            "location": "/Linux/yum/#how-to-rebuild-the-yum-database", 
            "text": "1\n2\n3\n4 # yum clean all  # rm -f /var/lib/rpm/__db*  # rpm --rebuilddb  # yum update", 
            "title": "How to rebuild the yum database"
        }, 
        {
            "location": "/Nexus/nexus-yum/", 
            "text": "YUM repositories in Nexus\n\n\n\n\n\n\nCreate a repo of type yum (example as shown below)\n\n  \n\n\n\n\n\n\nCreate a repo file in /etc/yum.repos.d/nexus.repo  \n\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n[nexusrepo]\n\n\nname\n=\nNexus Repository\n\n\nbaseurl\n=\nhttp://localhost:8081/repository/yum-google-chrome/\n\n\nenabled\n=\n1\n\n\ngpgcheck\n=\n1\n\n\ngpgkey\n=\nhttps://dl-ssl.google.com/linux/linux_signing_key.pub\n\n\npriority\n=\n1\n\n\n\n\n\n\n\n\n\nyum check-update  ---\n this command will check if there is any update for this package\n\n\n\n\ngoogle-chrome repo fetched from nexus\n\n\n\n\n\n\n\nBrowse yum proxy repository in nexus\n\n\n\n\n\n\n\n\nUpdate existing package using yum update as shown below\n\n\n\n\n\n\n\nBrowse yum proxy to verify if new package is downloaded", 
            "title": "Yum Repos"
        }, 
        {
            "location": "/Nexus/nexus-yum/#yum-repositories-in-nexus", 
            "text": "Create a repo of type yum (example as shown below)       Create a repo file in /etc/yum.repos.d/nexus.repo      1\n2\n3\n4\n5\n6\n7 [nexusrepo]  name = Nexus Repository  baseurl = http://localhost:8081/repository/yum-google-chrome/  enabled = 1  gpgcheck = 1  gpgkey = https://dl-ssl.google.com/linux/linux_signing_key.pub  priority = 1     yum check-update  ---  this command will check if there is any update for this package   google-chrome repo fetched from nexus    Browse yum proxy repository in nexus     Update existing package using yum update as shown below    Browse yum proxy to verify if new package is downloaded", 
            "title": "YUM repositories in Nexus"
        }, 
        {
            "location": "/OpenLDAP/openldap/", 
            "text": "OpenLDAP\n\n\nOpenLDAP", 
            "title": "Introduction"
        }, 
        {
            "location": "/OpenLDAP/openldap/#openldap", 
            "text": "OpenLDAP", 
            "title": "OpenLDAP"
        }, 
        {
            "location": "/SonarQube/sonarqube/", 
            "text": "SonarSource SonarQube - Continuous Code Quality\n\n\nSonarQube", 
            "title": "Introduction"
        }, 
        {
            "location": "/SonarQube/sonarqube/#sonarsource-sonarqube-continuous-code-quality", 
            "text": "SonarQube", 
            "title": "SonarSource SonarQube - Continuous Code Quality"
        }, 
        {
            "location": "/Virtualbox/", 
            "text": "VBox Logs\n\n\nFor Vbox if you encounter errors, check vbox logs at \n\n/var/log/vboxadd-install.log\n\n\nvboxmanage list vms\nvboxmanage showvminfo Centos7 --details\n\n\nhttps://blogs.oracle.com/scoter/networking-in-virtualbox-v2\n\n\nManage Vbox\n\n\nTo display list of vms on the vbox:\nvboxmanage list vms\n\n\nipod-not-recognised-in-windows-guest\n\n\n\n\nInstall Extension Pack.\n\n\nInstall Guest Additions in the Windows 7 guest machine.\n\n\nselect USB 2.0 as the controller in Settings\n\n\n\n\nInstall virtualbox Extension pack\n\n\nLink\n\n\n1\n2\n3\n4\n5\n1. wget http://download.virtualbox.org/virtualbox/5.2.4/Oracle_VM_VirtualBox_Extension_Pack-5.2.4-119785.vbox-extpack \n2. sudo vboxmanage extpack Oracle_VM_VirtualBox_Extension_Pack-5.2.4-119785.vbox-extpack\n3. Once installed, you can see at : File -\n Preferences -\n Extensions\n4. To verify if it has been successfully installed, we may list all installed extension packs:\nVBoxManage list extpacks\n\n\n\n\n\n\nCloning VMs in VirtualBox\n\n\nCloneVMs\n\n\n/etc/sysconfig/network-scripts/ifcfg-enp0s3\n/etc/udev/rules.d/*-persistent-net.rules\n\n\nRun VM in background\n\n\nGet the VM name by the command # vboxmanage list vms  \n\n\n1\n2\n3\nvboxmanage list vms\nVBoxManage startvm \n${\nVM_NAME\n}\n --type headless\nvboxmanage startvm centos7vm2 --type headless", 
            "title": "VirtualBox"
        }, 
        {
            "location": "/Virtualbox/#vbox-logs", 
            "text": "For Vbox if you encounter errors, check vbox logs at  /var/log/vboxadd-install.log  vboxmanage list vms\nvboxmanage showvminfo Centos7 --details  https://blogs.oracle.com/scoter/networking-in-virtualbox-v2", 
            "title": "VBox Logs"
        }, 
        {
            "location": "/Virtualbox/#manage-vbox", 
            "text": "To display list of vms on the vbox:\nvboxmanage list vms", 
            "title": "Manage Vbox"
        }, 
        {
            "location": "/Virtualbox/#ipod-not-recognised-in-windows-guest", 
            "text": "Install Extension Pack.  Install Guest Additions in the Windows 7 guest machine.  select USB 2.0 as the controller in Settings", 
            "title": "ipod-not-recognised-in-windows-guest"
        }, 
        {
            "location": "/Virtualbox/#install-virtualbox-extension-pack", 
            "text": "Link  1\n2\n3\n4\n5 1. wget http://download.virtualbox.org/virtualbox/5.2.4/Oracle_VM_VirtualBox_Extension_Pack-5.2.4-119785.vbox-extpack \n2. sudo vboxmanage extpack Oracle_VM_VirtualBox_Extension_Pack-5.2.4-119785.vbox-extpack\n3. Once installed, you can see at : File -  Preferences -  Extensions\n4. To verify if it has been successfully installed, we may list all installed extension packs:\nVBoxManage list extpacks", 
            "title": "Install virtualbox Extension pack"
        }, 
        {
            "location": "/Virtualbox/#cloning-vms-in-virtualbox", 
            "text": "CloneVMs  /etc/sysconfig/network-scripts/ifcfg-enp0s3\n/etc/udev/rules.d/*-persistent-net.rules", 
            "title": "Cloning VMs in VirtualBox"
        }, 
        {
            "location": "/Virtualbox/#run-vm-in-background", 
            "text": "Get the VM name by the command # vboxmanage list vms    1\n2\n3 vboxmanage list vms\nVBoxManage startvm  ${ VM_NAME }  --type headless\nvboxmanage startvm centos7vm2 --type headless", 
            "title": "Run VM in background"
        }, 
        {
            "location": "/vnc_config/", 
            "text": "VNC Server Configuration\n\n\n 1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13\n~\n]\n# yum install tigervnc-server\n\n~\n]\n# cp /usr/lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@.service\n\nEdit and add \nUSER\n in : /etc/systemd/system/vncserver\n\\@\n.service \n~\n]\n# systemctl daemon-reload\n\n~\n]\n# su - USER\n\n~\n]\n$ vncpasswd\nPassword:\nVerify:\n\n~\n]\n# systemctl start vncserver@:1.service\n\n~\n]\n# systemctl enable vncserver@:1.service\n\n\n~\n]\n# iptables -I INPUT 1 -p tcp --dport 5901 -j ACCEPT\n\n\n\n\n\n\n\nVNC Viewer:\n\n\nvncserver: 192.168.2.10:5901\n\n\n~]# vncviewer 192.168.2.10:1", 
            "title": "VNC"
        }, 
        {
            "location": "/vnc_config/#vnc-server-configuration", 
            "text": "1\n 2\n 3\n 4\n 5\n 6\n 7\n 8\n 9\n10\n11\n12\n13 ~ ] # yum install tigervnc-server \n~ ] # cp /usr/lib/systemd/system/vncserver@.service /etc/systemd/system/vncserver@.service \nEdit and add  USER  in : /etc/systemd/system/vncserver \\@ .service \n~ ] # systemctl daemon-reload \n~ ] # su - USER \n~ ] $ vncpasswd\nPassword:\nVerify:\n\n~ ] # systemctl start vncserver@:1.service \n~ ] # systemctl enable vncserver@:1.service \n\n~ ] # iptables -I INPUT 1 -p tcp --dport 5901 -j ACCEPT", 
            "title": "VNC Server Configuration"
        }, 
        {
            "location": "/vnc_config/#vnc-viewer", 
            "text": "vncserver: 192.168.2.10:5901  ~]# vncviewer 192.168.2.10:1", 
            "title": "VNC Viewer:"
        }, 
        {
            "location": "/references/", 
            "text": "Markdown\n   \n\n\n\n\nNote\n\n\nNote details with 2 tab spaces in the beginning.\n\n\n\n\n\n\n With Title\n\n\nNode details for example\n\n\n\n\n\n\nNote details.    \n\n\n\n\n\n\nTitle\n\n\nInformation details for example\n\n\n\n\n\n\nTip\n\n\nhttps://squidfunk.github.io/mkdocs-material/extensions/admonition/\n\nhttps://squidfunk.github.io/mkdocs-material/extensions/codehilite/  \n\n\n\n\n\n\nInfo\n\n\nThis is example for information\n\n\n\n\n\n\nSuccess\n\n\nThis example is displayed successfully\n\n\n\n\n\n\nQuestion\n\n\nThis example is to question ?\n\n\n\n\n\n\nWarning\n\n\nYou are warned with this example ....\n\n\n\n\n\n\nFailure\n\n\nFailed to show this example ...\n\n\n\n\n\n\nDanger\n\n\nVery dangerous if you do not read this example \n\n\n\n\n\n\nBug\n\n\nFinally i found the bug in your code.. lets fix it\n\n\n\n\n\n\nExample\n\n\nWhy don't you give some examples to the users following this page\n\n\n\n\n\n\nQuote\n\n\nI quoted this example \n!!! quote", 
            "title": "References"
        }, 
        {
            "location": "/about/", 
            "text": "This Site is a reference knowledgebase for Sriram Yeluri\n\n\nFor any clarifications, please reach me at : \nyeluris@gmail.com", 
            "title": "About"
        }
    ]
}